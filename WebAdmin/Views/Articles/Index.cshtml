@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@using X.PagedList.Mvc.Core.Common;
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model IPagedList<EntityFramework.Web.Entities.Article>
@*@model IEnumerable<EntityFramework.Web.Entities.Article>*@

@{ ViewData["Title"] = Localizer["Danh sách"]; }

<h1>@Localizer["Danh sách"]</h1>

<p>
    <a asp-action="Create">@Localizer["Thêm mới"]</a>
    <form method="get">
        <input type="text" id="Keyword" name="Keyword" value="@ViewData["Keyword"]" placeholder="Từ khóa" />
        <input type="submit" value="Search" />
    </form>
</p>
@using (Html.BeginForm())
{@*@if (Model.Count > 0)
        {*@
                <div class="pagination">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
                    of @Model.PageCount   @Html.PagedListPager(Model, page =>
Url.Action("Index", new { page = page, Keyword = ViewData["Keyword"] }),
new PagedListRenderOptions
{
LiElementClasses = new string[] { "page-item" },
PageClasses = new string[] { "page-link" }
})
                </div>
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>
                                                @Html.DisplayNameFor(model => model[0].MainCategories)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model[0].Title)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model[0].Img)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model[0].Summary)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model[0].IsNews)
                                            </th>
                                            @*<th>
                                                @Html.DisplayNameFor(model => model[0].Status)
                                            </th>*@
                                            <th>
                                                @Html.DisplayNameFor(model => model[0].Publisher)
                                            </th>
                                            @*<th>
                                                @Html.DisplayNameFor(model => model[0].UserCreator)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model[0].DateCreator)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model[0].UserModify)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model[0].DateModify)
                                            </th>*@
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.MainCategories.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @*@Html.DisplayFor(modelItem => item.Img)*@
                                <img id="ShowImg" height="100" src="@item.Img" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Summary)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsNews)
                            </td>
                            @*<td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>*@
                            <td>
                                @Html.DisplayFor(modelItem => item.Publisher)
                            </td>
                            @*<td>
                                @Html.DisplayFor(modelItem => item.UserCreator)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateCreator)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserModify)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateModify)
                            </td>*@
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id">@Localizer["Sửa"]</a> |
                                <a asp-action="Details" asp-route-id="@item.Id">@Localizer["Xem chi tiết"]</a> |
                                <a asp-action="Delete" asp-route-id="@item.Id">@Localizer["Xóa"]</a>
                            </td>
                        </tr>}
                                    </tbody>
                                </table> @*}
                                                    else
                                                    {
                                                    <p>@Localizer["Không có dữ liệu"]</p>}*@
                                                <p></p>
                                                                <div class="pagination">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount   @Html.PagedListPager(Model, page =>
Url.Action("Index", new { page = page, Keyword = ViewData["Keyword"] }),
new PagedListRenderOptions
{
LiElementClasses = new string[] { "page-item" },
PageClasses = new string[] { "page-link" }
})
</div>}