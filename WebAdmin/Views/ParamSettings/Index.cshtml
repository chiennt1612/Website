@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@*@model IEnumerable<EntityFramework.Web.Entities.ParamSetting>*@
@using X.PagedList.Mvc.Core.Common;
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model IPagedList<EntityFramework.Web.Entities.ParamSetting>

@{ ViewData["Title"] = Localizer["Danh sách"]; }

<h1>@Localizer["Danh sách"]</h1>

<p>
    <a asp-action="Create">@Localizer["Thêm mới"]</a>
</p>@if (Model.Count > 0)
{
<div class="pagination">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount   @Html.PagedListPager(Model, page =>
Url.Action("Index", new { page = page }),
new PagedListRenderOptions
{
LiElementClasses = new string[] { "page-item" },
PageClasses = new string[] { "page-link" }
})
</div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Logo)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Since)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Address)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Hotline)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Phone)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Email)
                            </th>
                            @*<th>
                                @Html.DisplayNameFor(model => model.UserCreator)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DateCreator)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.UserModify)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DateModify)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.IsDeleted)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.UserDeleted)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DateDeleted)
                            </th>*@
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Logo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Since)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hotline)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.UserCreator)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreator)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserModify)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateModify)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsDeleted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserDeleted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateDeleted)
            </td>*@
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">@Localizer["Sửa"]</a> |
                <a asp-action="Details" asp-route-id="@item.Id">@Localizer["Xem chi tiết"]</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">@Localizer["Xóa"]</a>
            </td>
        </tr>}
                    </tbody>
                </table>
                                <div class="pagination">
                                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
                                    of @Model.PageCount   @Html.PagedListPager(Model, page =>
Url.Action("Index", new { page = page }),
new PagedListRenderOptions
{
LiElementClasses = new string[] { "page-item" },
PageClasses = new string[] { "page-link" }
})
                                </div> }
                            else
                            {
                <p>@Localizer["Không có dữ liệu"]</p>}