@using Microsoft.AspNetCore.Mvc.Localization
@using X.PagedList.Mvc.Core.Common;
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@inject IViewLocalizer Localizer
@model IPagedList<SSO.Entities.AppUser>
@*@model IEnumerable<SSO.Entities.AppUser>*@

@{
    ViewData["Title"] = Localizer["Danh sách tài khoản"];
    var UserType = 1;
    if (ViewData["UserType"].ToString() != "1") UserType = 0;
    var Keyword = "";
    if (ViewData["Keyword"].ToString() != "") Keyword = ViewData["Keyword"].ToString();
}

<h1>@Localizer["Danh sách tài khoản"]</h1>

<p>
    <a asp-action="Create" asp-controller="AppUsers">@Localizer["Thêm mới"]</a>
    <form method="get">
        <select id="UserType" name="UserType">
            @if (UserType == 1)
            {
                <option value="1" selected>Admin web/ AYs</option>
                <option value="0">Guest</option>
            }
            else
            {
                <option value="1">Admin web/ AYs</option>
                <option value="0" selected>Guest</option>
            }
        </select>
        <input type="text" id="Keyword" name="Keyword" value="@Keyword" placeholder="Từ khóa" />
        <input type="submit" value="Search" />
    </form>
</p>
<div class="pagination">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount   @Html.PagedListPager(Model, page =>
Url.Action("Index", new { page = page, Keyword = Keyword, UserType = UserType }),
new PagedListRenderOptions
{
LiElementClasses = new string[] { "page-item" },
PageClasses = new string[] { "page-link" }
})
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                AYs Username
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].EmailConfirmed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].PhoneNumberConfirmed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].TwoFactorEnabled)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @*@Html.DisplayFor(modelItem => item.OldId)*@
                @{
                    var OldId = "";
                    if (!String.IsNullOrEmpty(item.OldId))OldId = item.OldId;
                    OldId = OldId.Replace(",", "<br>");
                }

                @Html.Raw(OldId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailConfirmed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TwoFactorEnabled)
            </td>
            <td class="text-nowrap">
                <a asp-action="Edit" asp-route-id="@item.Id">@Localizer["Sửa"]</a> |
                <a asp-action="Details" asp-route-id="@item.Id">@Localizer["Chi tiết"]</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">@Localizer["Xóa"]</a>
            </td>
        </tr>
        }
    </tbody>
</table>
<div class="pagination">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount   @Html.PagedListPager(Model, page =>
Url.Action("Index", new { page = page, Keyword = Keyword, UserType = UserType }),
new PagedListRenderOptions
{
LiElementClasses = new string[] { "page-item" },
PageClasses = new string[] { "page-link" }
})
</div>